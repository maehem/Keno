/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * KenoGrid.java
 *
 * Created on Oct 4, 2009, 12:22:39 PM
 */

package keno.widgets;

import java.awt.Component;
import java.awt.Dimension;
import java.util.ArrayList;
import keno.panels.NumberPicksPanel;
import keno.panels.PayoutTablePanel;

/**
 *
 * @author mark
 */
public class KenoGrid extends javax.swing.JPanel {

    public static final int TOP=0, BOTTOM=1;


    /** Creates new form KenoGrid */
    public KenoGrid( int panel, NumberPicksPanel pickPanel, PayoutTablePanel payoutPanel ) {
        int startAt=1;
        initComponents();
        setOpaque(false);
        if ( panel == BOTTOM ) startAt = 41;
        for ( int i=startAt; i<(startAt+40);i++ ) {
            KenoGridTile t = new KenoGridTile(i);
            add( t );
            pickPanel.addDrawListener(t);
            t.addPickListener(payoutPanel);
        }
        validate();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {

        setName("KenoGrid");
        setLayout(new java.awt.GridLayout(4, 10));
        //setPreferredSize(new Dimension(400, 180));
    }

    public void pickRandom() {
        boolean wasPicked = false;
        while ( !wasPicked ) {
            KenoGridTile t = (KenoGridTile) getComponent( (int) (Math.random() * 40));
            if ( !t.isPicked() ) {
                t.setPick();
                wasPicked = true;
            }
        }
    }

    public ArrayList<KenoGridTile> getTiles() {
        ArrayList<KenoGridTile> list = new ArrayList<KenoGridTile>();
        Component c[] = getComponents();

        for ( Component t : c )  list.add((KenoGridTile)t);

        return list;
    }
}
